@page "/mainview"
@using Microsoft.AspNetCore.Components.QuickGrid;
@using Kulunvalvonta.Shared;
@rendermode InteractiveAuto
@inject HttpClient Http
@inject NavigationManager NavManager

<PageTitle>Traffic Data</PageTitle>

@if (DataProvider == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <div class="container">
        <div class="col-lg-4 col-md-5 col-sm-6">
            <h3 class="title">Liikenne</h3>
            <div class="grid text-nowrap">
                <QuickGrid ItemsProvider="DataProvider">
                    <PropertyColumn Property="p => p.RegNumber" Title="Rekisterinumero"></PropertyColumn>
                    <PropertyColumn Property="p => p.DriverName" Title="Kuljettaja" ></PropertyColumn>
                    <PropertyColumn Property="p => p.Company" Title="Yritys"></PropertyColumn>
                    <PropertyColumn Property="p => p.Date" Title="Päivämäärä"></PropertyColumn>
                    <PropertyColumn Property="p => p.EntryTime" Title="Sisään"></PropertyColumn>
                    <PropertyColumn Property="p => p.ExitTime" Title="Ulos"></PropertyColumn>
                    <PropertyColumn Property="p => p.Reason" Title="Syy"></PropertyColumn>
                    <PropertyColumn Property="p => p.ExpandedReason" Title="Lisätiedot"></PropertyColumn>
                    <PropertyColumn Property="p => p.LocationId" Title="Paikkakunta"></PropertyColumn>
                    <TemplateColumn Title="Toiminnot">
                        <button class="btn btn-primary btn-sm" @onclick="() => Departed(context)">Poistunut</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteEntry(context)">Poista</button>
                    </TemplateColumn>

                </QuickGrid>
            </div>
        </div>
    </div>



}

@code {
    GridItemsProvider<TrafficdataDto>? DataProvider;
    //private List<TrafficdataDto>? trafficData;


    protected override void OnInitialized()
    {
        DataProvider = async (request) =>
        {
            var allData = await Http.GetFromJsonAsync<List<TrafficdataDto>>("/trafficdata")
                           ?? new List<TrafficdataDto>();

            var items = allData
                .Skip(request.StartIndex)
                .Take(request.Count ?? allData.Count)
                .ToList();

            return new GridItemsProviderResult<TrafficdataDto>
                {
                    Items = items,
                    TotalItemCount = allData.Count
                };
        };
    }

    private void Departed(TrafficdataDto TrafficEntry)
    {
        //NavManager.NavigateTo();
    }

    private void DeleteEntry(TrafficdataDto TrafficEntry)
    {
        //NavManager.NavigateTo();
    }

}
