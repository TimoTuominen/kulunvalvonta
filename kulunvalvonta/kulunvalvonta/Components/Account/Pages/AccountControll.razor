@page "/Admin/Users"

@using System.Linq
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@using kulunvalvonta.Data

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager

<PageTitle>Käyttäjät</PageTitle>

<h1>Käyttäjät</h1>

<QuickGrid TItem="UserViewModel" Items="@users.AsQueryable()" Sortable="true" ColumnsResizable="true">
    <Columns>
        <PropertyColumn TGridItem="UserViewModel" TProp="string"
                        Property="u => u.Email"
                        Title="Sähköposti" />

        <TemplateColumn TGridItem="UserViewModel" Title="Roolit">
            @string.Join(", ", context.Roles)
        </TemplateColumn>

        <TemplateColumn TGridItem="UserViewModel" Title="Toiminnot">
            <button class="btn btn-sm btn-primary" @onclick="() => EditUser(context.Id)">Muokkaa</button>
        </TemplateColumn>
    </Columns>
</QuickGrid>

@code {
    private List<UserViewModel> users = new();

    protected override async Task OnInitializedAsync()
    {
        var allUsers = await UserManager.Users.ToListAsync();
        foreach (var user in allUsers)
        {
            var roles = await UserManager.GetRolesAsync(user);
            users.Add(new UserViewModel
            {
                Id = user.Id,
                Email = user.Email ?? string.Empty,
                Roles = roles
            });
        }
    }

    private void EditUser(string id)
    {
        NavigationManager.NavigateTo($"/Admin/UserEdit/{id}");
    }

    private class UserViewModel
    {
        public string Id { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public IList<string> Roles { get; set; } = new List<string>();
    }
}



